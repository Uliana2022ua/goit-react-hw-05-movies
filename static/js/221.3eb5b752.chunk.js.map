{"version":3,"file":"static/js/221.3eb5b752.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieGallery/MovieGallery.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","utils/defaultImage.js","utils/movieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-radius: ${p => p.theme.radii.primary};\n  box-shadow: ${p => p.theme.shadows.primary};\n  overflow: hidden;\n  cursor: pointer;\n  transform: scale(1);\n  transition: ${p => p.theme.styles.transition};\n\n  :hover {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n`;\n\nexport const Title = styled.p`\n  display: inline-block;\n  font-size: ${p => p.theme.fontSizes.title};\n  font-weight: bold;\n`;\n\nexport const Votes = styled.p`\n  display: inline-block;\n  margin-left: auto;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  font-size: ${p => p.theme.fontSizes.title};\n  font-weight: bold;\n  color: white;\n  border-radius: ${p => p.theme.radii.primary};\n  background-color: ${p => p.theme.colors.bgDark};\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport { Item, Image, Title, Votes } from './MovieCard.styled';\n\nconst MovieCard = ({ id, title, posterPath, votes }) => {\n  const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  const path = location.pathname === '/movies' ? `${id}` : `movies/${id}`;\n  return (\n    <Item>\n      <Link\n        to={path}\n        state={{ from: `${location.pathname + location.search}` }}\n      >\n        <Image src={BASE_URL + posterPath} alt={`Poster ${title}`} />\n        <Box\n          display=\"flex\"\n          height=\"titleBlock\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          padding={4}\n          as=\"div\"\n        >\n          <Title>{title}</Title>\n          <Votes>{votes.toFixed(1)}</Votes>\n        </Box>\n      </Link>\n    </Item>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  posterPath: PropTypes.string,\n  votes: PropTypes.number.isRequired,\n};","import PropTypes from 'prop-types';\nimport { Box } from 'components/Box';\nimport MovieCard from 'components/MovieCard';\n\nconst MovieGallery = ({ movies }) => {\n  return (\n    <Box\n      display=\"grid\"\n      gridTemplateColumns=\"1fr 1fr 1fr 1fr\"\n      gridGap={5}\n      as=\"ul\"\n    >\n      {movies.map(({ id, title, poster_path, vote_average }) => (\n        <MovieCard\n          key={id}\n          id={id}\n          title={title}\n          posterPath={poster_path}\n          votes={vote_average}\n        ></MovieCard>\n      ))}\n    </Box>\n  );\n};\n\nexport default MovieGallery;\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  display: block;\n  padding: ${p => p.theme.space[6]}px;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.title};\n`;","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Box } from 'components/Box';\nimport MovieGallery from 'components/MovieGallery';\nimport Loader from 'components/Loader';\nimport { PageTitle } from './Home.styled';\nimport { getTrendingMovies } from 'utils';\n\nconst STATUS = {\n  idle: 0,\n  pending: 1,\n  resolved: 2,\n  rejected: 3,\n};\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.idle);\n\n  // -------------------------------------------------\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    async function getMovies() {\n      try {\n        const trendingMovies = await getTrendingMovies({ signal });\n        setStatus(STATUS.resolved);\n\n        setTrendingMovies(trendingMovies);\n      } catch (error) {\n        setStatus(STATUS.rejected);\n        toast(error.message);\n      }\n    }\n    getMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  // -------------------------------------------------\n  return (\n    <Box backgroundColor=\"bgMain\" minHeight=\"100vh\" as=\"main\">\n      <Box\n        width=\"container\"\n        marginLeft=\"auto\"\n        marginRight=\"auto\"\n        paddingTop={4}\n        paddingBottom={5}\n        paddingLeft={3}\n        paddingRight={3}\n      >\n        <PageTitle>Trending today</PageTitle>\n\n        {status === STATUS.pending && <Loader />}\n        {trendingMovies.length !== 0 && (\n          <MovieGallery movies={trendingMovies} />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;","\n\nconst defaultImage = '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>'\n\n//   < img src = {\n//     movieData.poster_path ?\n//       [<https://image.tmdb.org/t/p/w500/${movieData.poster_path}>](<https://image.tmdb.org/t/p/w500/$%7BmovieData.poster_path%7D>)\n//  : defaultImage\n// }\n// width={250}\n// alt=\"poster\"\n// />\n\n\nexport function getImagePosterPath(path) {\n  return path ? `https://image.tmdb.org/t/p/w500/${path}` : defaultImage;\n}","import axios from 'axios';\nimport { API_KEY, BASE_URL } from 'constants';\nimport { getImagePosterPath } from 'utils/defaultImage';\n\n\n\nexport async function getTrendingMovies(page, controller) {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`,\n    { signal: controller.signal }\n  );\n\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      posterPath: getImagePosterPath(poster_path),\n    };\n  });\n\n  return { movies, totalPages: response.data.total_pages };\n}\n\nexport async function getMovieDetails(movieId, controller) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n\n  const { title, poster_path, overview, genres, vote_average, release_date } =\n    response.data;\n\n  return {\n    title,\n    posterPath: getImagePosterPath(poster_path),\n    overview,\n    genres: genres.map(genre => genre.name).join(', '),\n    vote: vote_average.toFixed(1),\n    year: release_date.slice(0, 4),\n  };\n}\n\nexport async function getMovieCast(movieId, controller) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n\n  const actors = response.data.cast.map(\n    ({ id, name, profile_path, character }) => {\n      return {\n        id,\n        name,\n        profilePath: getImagePosterPath(profile_path),\n        character,\n      };\n    }\n  );\n\n  return actors;\n}\n\nexport async function getReviews(movieId, controller) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    { signal: controller.signal }\n  );\n\n  const reviews = response.data.results.map(({ id, author, content }) => {\n    return {\n      id,\n      author,\n      content,\n    };\n  });\n\n  return reviews;\n}\n\nexport async function getMovies(query, page = 1, controller) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\n    { signal: controller.signal }\n  );\n\n  const movies = response.data.results.map(({ id, title, poster_path }) => {\n    return {\n      id,\n      title,\n      posterPath: getImagePosterPath(poster_path),\n    };\n  });\n\n  return {\n    movies,\n    totalPages: response.data.total_pages,\n    totalResults: response.data.total_results,\n  };\n}"],"names":["Item","styled","p","theme","radii","primary","shadows","styles","transition","Image","Title","fontSizes","title","Votes","space","colors","bgDark","id","posterPath","votes","location","useLocation","path","pathname","to","state","from","search","src","alt","Box","display","height","alignItems","justifyContent","padding","as","toFixed","movies","gridTemplateColumns","gridGap","map","poster_path","vote_average","PageTitle","STATUS","useState","trendingMovies","setTrendingMovies","status","setStatus","useEffect","controller","AbortController","signal","getTrendingMovies","toast","message","getMovies","abort","backgroundColor","minHeight","width","marginLeft","marginRight","paddingTop","paddingBottom","paddingLeft","paddingRight","Loader","length","MovieGallery","getImagePosterPath","page","axios","BASE_URL","API_KEY","response","data","results","totalPages","total_pages","getMovieDetails","movieId","overview","genres","release_date","genre","name","join","vote","year","slice","getMovieCast","actors","cast","profile_path","character","profilePath","getReviews","reviews","author","content","query","totalResults","total_results"],"sourceRoot":""}